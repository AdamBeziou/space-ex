{"version":3,"sources":["Answer.js","Submit.js","Question.js","QuestionCard.js","AnsweredQuestionCard.js","SpaceExQuiz.js","App.js","index.js"],"names":["AnswerBox","FormControlLabel","control","Radio","label","this","props","answer","value","Component","SubmitButton","Button","onClick","callback","class","Question","text","answers","correctAnswer","answeredIndex","undefined","push","index","QuestionCard","handleChange","bind","onSubmit","state","question","isAnswered","prevProps","setState","i","findIndex","event","target","className","FormControl","component","disabled","RadioGroup","name","onChange","map","a","Answer","String","showNext","onNext","isCorrect","Submit","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","questionList","shuffle","arr","length","j","Math","floor","random","hold","shuffleCorrectAnswers","questionArr","console","log","forEach","q","correctValue","v","SpaceExQuiz","onReset","message","score","filter","fractionCorrect","renderScore","slice","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26ac8f7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FormControlLabel, Radio } from \"@material-ui/core\";\n\nclass AnswerBox extends Component {\n    render() {\n      return (\n        <FormControlLabel \n            control={<Radio />} \n            label={this.props.answer} \n            value={this.props.answer}\n        />\n      );\n    }\n}\n\nexport default AnswerBox;","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\n\nclass SubmitButton extends Component {\n    render() {\n      return (\n        <Button onClick={() => this.props.callback()} class=\"waves-effect waves-light btn\">\n            Submit\n        </Button>\n      );\n    }\n}\n\nexport default SubmitButton;","class Question {\n    constructor(text, answers, correctAnswer) {\n        this.text = text\n        this.correctAnswer = correctAnswer\n        this.answers = answers\n        this.answeredIndex = undefined\n    }\n\n    addAnswer(answer) {\n        this.answers.push(answer)\n    }\n\n    changeCorrectAnswer(correctAnswer) {\n        this.correctAnswer = correctAnswer\n    }\n\n    answer(index) {\n        this.answeredIndex = index\n    }\n\n    isAnswered() {\n        return this.answeredIndex !== undefined\n    }\n\n    isCorrect() {\n        return this.correctAnswer === this.answeredIndex\n    }\n}\n\nexport default Question","import React, { Component } from 'react';\nimport AnswerBox from \"./Answer\";\nimport SubmitButton from \"./Submit\";\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel } from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Question from './Question';\nimport Paper from '@material-ui/core/Paper';\n\nclass QuestionCard extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n          value: (\n            this.props.question.isAnswered() \n              ? this.props.question.answers[this.props.question.answeredIndex] \n              : this.props.question.answers[0]\n          ),\n          isAnswered: this.props.question.answeredIndex !== undefined \n        }\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.question !== prevProps.question) {\n        this.setState({\n          value: (\n            this.props.question.isAnswered() \n              ? this.props.question.answers[this.props.question.answeredIndex] \n              : this.props.question.answers[0]\n          ),\n          isAnswered: this.props.question.answeredIndex !== undefined \n        })\n      }\n    }\n\n    onSubmit() {\n      let i = this.props.question.answers.findIndex(value => value === this.state.value)\n      this.props.question.answer(i)\n      this.setState({\n        isAnswered: true\n      })\n    }\n\n    handleChange(event) {\n      this.setState({\n        value: event.target.value\n      })\n    }\n\n    render() {\n      return (\n        <div className={\"question-card\"}>\n          {this.props.question.text}\n          <FormControl component=\"fieldset\" disabled={this.props.question.isAnswered()}>\n            <RadioGroup name=\"answers\" value={this.state.value} onChange={this.handleChange}>\n            {this.props.question.answers.map(\n                (a, i) => <AnswerBox value={String(i)} answer={a}/>\n            )}\n            </RadioGroup>\n          </FormControl>\n          \n          {\n            (this.props.question.isAnswered())\n              ? \n                <div>\n                  {\n                    (this.props.showNext\n                      ? <Button onClick={() => { this.props.onNext() }} class=\"waves-effect waves-light btn\">Next</Button>\n                      : <></>\n                    )\n                  }\n                  <p>\n                    {\n                      (this.props.question.isCorrect()\n                        ? \"Correct!\"\n                        : \"Incorrect! Correct answer: \" + this.props.question.answers[this.props.question.correctAnswer])\n                    }\n                  </p>\n                </div>\n              : \n                <div>\n                  <SubmitButton callback={() => { this.onSubmit() }}/>\n                </div>\n          }\n          \n        </div>\n      );\n    }\n}\n\nexport default QuestionCard;","import React, { Component } from 'react';\nimport AnswerBox from \"./Answer\";\nimport SubmitButton from \"./Submit\";\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel } from \"@material-ui/core\";\nimport Paper from '@material-ui/core/Paper';\n\nclass AnsweredQuestionCard extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this)\n        this.state = {\n          value: this.props.question.answers[this.props.question.answeredIndex]\n        }\n    }\n\n    render() {\n      return (\n        <Paper className={\"question-card\" + (this.props.question.isCorrect() ? \" correct\" : \" incorrect\")}>\n          {this.props.question.text}\n          <FormControl component=\"fieldset\">\n            <RadioGroup name=\"answers\" value={this.state.value}>\n            {this.props.question.answers.map(\n                (a, i) => <AnswerBox value={String(i)} answer={a}/>\n            )}\n            </RadioGroup>\n            <SubmitButton/>\n          </FormControl>\n          {(this.props.question.isCorrect() ? \n          \"Correct!\" : \n          \"Incorrect! Correct answer: \" + this.props.question.answers[this.props.question.correctAnswer])}\n        </Paper>\n      );\n    }\n}\n\nexport default AnsweredQuestionCard;","import React, { Component } from 'react';\nimport QuestionCard from \"./QuestionCard\";\nimport AnsweredQuestionCard from './AnsweredQuestionCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Question from './Question';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst questionList = [\n    new Question(\n        \"True or false: Buzz Aldrin was the first astronaut to walk on the moon\", \n        [\"True\",\n         \"False\"],\n        1\n    ),\n    new Question(\n        \"How long has the space station been in operation?\", \n        [\"22 years\",\n         \"30 years\",\n         \"15 years\",\n         \"50 years\"],\n        0\n    ),\n    new Question(\n        \"How many astronauts have been to the moon?\", \n        [\"24\",\n         \"50\",\n         \"10\",\n         \"12\"],\n        0\n    ),\n    new Question(\n        \"What mission or spacecraft has traveled the furthest from earth?\", \n        [\"Voyager 1\",\n         \"Genesis\",\n         \"Sputnik\",\n         \"Voyager 2\"],\n        0\n    ),\n    new Question(\n        \"How long does it take to reach Mars via spacecraft? \", \n        [\"Between 6 and 8 months\",\n         \"Between 1 and 3 months\",\n         \"Between 1 and 2 years\",\n         \"Between 9 and 12 months\"],\n        0\n    ),\n    new Question(\n        \"How many missions does NASA have planned for the 2020’s?\", \n        [\"15\",\n         \"8\",\n         \"12\",\n         \"26\"],\n        0\n    ),\n    new Question(\n        \"What is the most Earth-like place in the solar system (other than earth)\", \n        [\"Titan\",\n         \"Mars\",\n         \"Jupiter\",\n         \"Europa\"],\n        0\n    ),\n    new Question(\n        \"What year was the first object to orbit earth launched into space?\", \n        [\"1957\",\n         \"1942\",\n         \"1960\",\n         \"1954\"],\n        0\n    ),\n    new Question(\n        \"How long does it take light to reach the earth from the Sun?\", \n        [\"8:20\",\n         \"7:30\",\n         \"10:15\",\n         \"30:00\"],\n        0\n    ),\n    new Question(\n        \"What year was the last flight of the space shuttle?\", \n        [\"2011\",\n         \"2008\",\n         \"2014\",\n         \"2005\"],\n        0\n    ),\n    new Question(\n        \"How many countries have had astronauts visit the space station?\", \n        [\"12\",\n         \"17\",\n         \"19\",\n         \"10\"],\n        2\n    ),\n    new Question(\n        \"Which company developed the first reusable booster for launching objects into space?\", \n        [\"SpaceX\",\n         \"Boeing\",\n         \"United Launch Alliance\",\n         \"Blue Origin\"],\n        0\n    ),\n    new Question(\n        \"What is the name of the first Mars rover to explore the planet?\", \n        [\"Sojourner\",\n         \"Curiosity\",\n         \"Opportunity\",\n         \"Perseverance\"],\n        0\n    ),\n    new Question(\n        \"True or false: there is no sound in space because there is no medium for vibrations to travel through\", \n        [\"True\",\n         \"False\"],\n        0\n    ),\n    new Question(\n        \"How many Missions did the space shuttle fly?\", \n        [\"135\",\n         \"87\",\n         \"156\",\n         \"75\"],\n        0\n    ),\n    new Question(\n        \"What is the longest amount of time an astronaut from the US has spent in space?\", \n        [\"340 Days\",\n         \"272 Days\",\n         \"365 Days\",\n         \"203 Days\"],\n        0\n    ),\n    new Question(\n        \"What is the hottest planet in the solar system?\", \n        [\"Venus\",\n         \"Jupiter\",\n         \"Mars\",\n         \"Earth\"],\n        0\n    ),\n    new Question(\n        \"How much does a NASA space suit cost?\", \n        [\"$12 million\",\n         \"$10 million \",\n         \"$8 million\",\n         \"$15 million\"],\n        0\n    ),\n    new Question(\n        \"Which country has sent the most astronauts to the space station?\", \n        [\"United States\",\n         \"Russia\",\n         \"Japan\",\n         \"France\"],\n        0\n    ),\n    new Question(\n        \"True or false: spacecraft have visited every planet in our solar system\", \n        [\"True\",\n         \"False\"],\n        0\n    ),\n    new Question(\n        \"True or false: the sun contains more than 99 % of the mass in our solar system\", \n        [\"True\",\n         \"False\"],\n        0\n    )\n]\n\n// Shuffles an array using Fisher-Yates\nlet shuffle = (arr) => {\n    for (let i = arr.length - 1; i >= 1; i--) {\n        let j = Math.floor(Math.random() * i)\n        let hold = arr[i]\n        arr[i] = arr[j]\n        arr[j] = hold\n    }\n}\n\nlet shuffleCorrectAnswers = (questionArr) => {\n    console.log(questionArr)\n    questionArr.forEach(q => {\n        console.log(q)\n        let correctValue = q.answers[q.correctAnswer]\n        console.log(correctValue)\n        shuffle(q.answers)\n        q.correctAnswer = q.answers.findIndex(v => v === correctValue)\n    })\n}\n\nclass SpaceExQuiz extends Component {\n    constructor(props) {\n        super(props);\n        this.onNext = this.onNext.bind(this)\n        this.onReset = this.onReset.bind(this)\n        this.state = {\n            index: 0\n        }\n        //shuffle(questionList)\n        shuffleCorrectAnswers(questionList)\n    }\n\n    onNext() {\n        console.log(this.state.index)\n        if (this.state.index < questionList.length) {\n            this.setState({\n                index: this.state.index + 1\n            })\n        }\n    }\n\n    onReset() {\n        questionList.forEach(q => {\n            q.answeredIndex = undefined\n        })\n        shuffle(questionList)\n        shuffleCorrectAnswers(questionList)\n        this.setState({\n            index: 0\n        })\n    }\n\n    renderScore() {\n        let score = questionList.filter(v => v.isCorrect()).length\n        let fractionCorrect = score / questionList.length\n        let message;\n        if (fractionCorrect < 0.3) {\n            message = \"Better luck next time!\"\n        }\n        else if (fractionCorrect < 0.8) {\n            message = \"Good job!\"\n        }\n        else {\n            message = \"Excellent!\"\n        }\n        return (\n            <body className={\"score-section\"}>\n                <p>Score: {score}/{questionList.length}. </p>\n                <p>{message} </p>\n                <button onClick={() => {this.onReset()}}>Try again</button>\n            </body>\n        )\n    }\n\n    render() {\n        console.log(questionList)\n        return (\n            <div className=\"App\">\n              <header className=\"App-header\">\n                Space Exploration Quiz\n              </header>\n              <hr></hr>\n              {this.state.index < questionList.length \n                ?\n                    <body>\n                        <QuestionCard \n                            showNext={true}\n                            question={questionList[this.state.index]}\n                            onNext={() => { this.onNext() }}\n                            answeredIndex={questionList[this.state.index].answeredIndex}\n                        />\n                    </body>\n                :\n                    this.renderScore()\n              }\n              Previous Questions:\n              <div className={\"accordion-section\"}>\n              {questionList.slice(0, this.state.index).map(\n                    (q, i) => \n                    <Accordion>\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id={q.text}\n                      >\n                        <Typography className={useStyles.heading}>\n                            {q.isCorrect() ? \"Correct: \" + q.text : \"Incorrect: \" + q.text}\n                        </Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <QuestionCard \n                            answeredIndex={q.answeredIndex}\n                            showNext={false}\n                            question={q}\n                        />\n                      </AccordionDetails>\n                    </Accordion>\n                )}\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default SpaceExQuiz;\n","import './App.css';\nimport SpaceExQuiz from './SpaceExQuiz'\n\nfunction App() {\n  return (\n    <SpaceExQuiz/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}